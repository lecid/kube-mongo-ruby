services:
  traefik:
    image: traefik:latest
    ports:
      - target: 80
        published: 80
        mode: host
        protocol: tcp
      - target: 8080
        published: 8080
        mode: host
        protocol: tcp
    networks:
      - traefik-net
    command:
      - --api.insecure=true
      - --api.dashboard=true
      - --providers.swarm.exposedbydefault=false
      - --providers.swarm.network=traefik-net
      - --entrypoints.web.address=:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints:
          - node.role == manager

  kube-mongo-ruby:
    image: <APP_NAME>:<APP_VERSION>
    networks:
      - traefik-net
      - backend
    environment:
      - RACK_ENV=test
    deploy:
      replicas: <APP_REPLICAS>
      placement:
        constraints:
          - node.role == manager
      labels:
          - traefik.enable=true
          - traefik.http.routers.kube-mongo-ruby.entrypoints=web
          - traefik.http.routers.kube-mongo-ruby.rule=Host(`kube-mongo-ruby.localhost`)
          - traefik.http.services.kube-mongo-ruby.loadbalancer.server.port=8080


  mongodb:
    image: mongo:latest
    networks:
      - backend



networks:
  traefik-net:
    driver: overlay
    name: traefik-net
    attachable: true
  backend:
    driver: overlay
    name: backend
